version: 2.1

orbs: 
  kubernetes: circleci/kubernetes@1.3.0

#Define runner executor once for use throughout the pipeline
executors:
  k8s-runner:
    machine: true
    resource_class: jtreutel/runner-test-k8s-2022

commands:
  install-aws-iam-authenticator:
    steps:
      - run: |
          if [ ! -f "$HOME/bin/aws-iam-authenticator" ]; then \
            curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/aws-iam-authenticator && \
            chmod +x ./aws-iam-authenticator && \
            mv ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator; \
          fi


jobs:
  checkout-code:
    # This job does not need to be run on-prem
    docker:
      - image: cimg/base:2022.03
    # We are caching data generated in a cloud container and passing it to our on-prem CircleCI Runner
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
          - .
  testing-deploy-pod:
    executor: k8s-runner
    steps:
      - attach_workspace:
          at: .
      - install-aws-iam-authenticator #Needed to interact with EKS
      - kubernetes/install-kubectl
      - kubernetes/install-kubeconfig
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployments/angular.yml
          resource-name: deployment/angular-app
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: services/angular.yml
          resource-name: service/angular-app
          show-kubectl-command: true
      # Get port and IP of service
      - run: echo "export SVC_PORT_AND_IP=\"$(kubectl get svc angular-app -o=jsonpath='{.spec.clusterIP}'):$(kubectl get svc angular-app -o=jsonpath='{.spec.ports[0].port}')\" >> $BASH_ENV
      # Wait for service to be available
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
  testing-execute-test:
    executor: k8s-runner
    steps:
      - attach_workspace:
          at: .
      - run: mkdir test_results
      - run: curl $SVC_PORT_AND_IP | tee test_results/curl.txt
      - store_artifacts:
          path: test_results/curl.txt
          destination: curl-results

  testing-delete-pod:
    executor: k8s-runner
    steps:
      - kubernetes/install-kubectl
      - kubernetes/install-kubeconfig
      - kubernetes/delete-resource:
          now: true
          resource-names: angular-app
          resource-types: deployments
          wait: true
      - kubernetes/delete-resource:
          now: true
          resource-names: angular-app
          resource-types: service
          wait: true

workflows:
  testing:
    jobs:
      - checkout-code
      - testing-deploy-pod:
          requires:
            - checkout-code
          context: kubeconfig
      - testing-execute-test:
          requires:
            - testing-deploy-pod
          context: kubeconfig
