version: 2.1

orbs: 
  kubernetes: circleci/kubernetes@1.3.0

#Define runner executor once for use throughout the pipeline
executors:
  k8s-runner:
    machine: true
    resource_class: jtreutel/runner-test-k8s-2022

#commands:
#  get-service-ip-and-port:
#zs    run: $(kubectl get svc angular-app -o=jsonpath='{.spec.clusterIP}'):$(kubectl get svc angular-app -o=jsonpath='{.spec.ports[0].port}')

jobs:
  checkout-code:
    # This job does not need to be run on-prem
    docker:
      - image: cimg/base:2022.03
    # We are caching data generated in a cloud container and passing it to our on-prem CircleCI Runner
    steps:
      - checkout
      - persist_to_workspace:
          root: .
          paths:
          - .
  testing-deploy-pod:
    executor: k8s-runner
    steps:
      - attach_workspace:
          at: .
      - kubernetes/install-kubectl
      - kubernetes/install-kubeconfig
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployments/angular.yml
          resource-name: deployment/angular-app
          show-kubectl-command: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: services/angular.yml
          resource-name: service/angular-app
          show-kubectl-command: true
      # Get port and IP of service
      - run: echo "export SVC_PORT_AND_IP=\"$(kubectl get svc angular-app -o=jsonpath='{.spec.clusterIP}'):$(kubectl get svc angular-app -o=jsonpath='{.spec.ports[0].port}')\" >> $BASH_ENV
      # Wait for service to be available
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
  testing-execute-test:
    executor: k8s-runner
    steps:
      - attach_workspace:
          at: .
      - run: mkdir test_results
      - run: curl $SVC_PORT_AND_IP | tee test_results/curl.txt
      - store_artifacts:
          path: test_results/curl.txt
          destination: curl-results

workflows:
  testing:
    jobs:
      - checkout-code
      - testing-deploy-pod:
          requires:
            - checkout-code
          context: kubeconfig
      - testing-execute-test:
          requires:
            - testing-deploy-pod
          context: kubeconfig
